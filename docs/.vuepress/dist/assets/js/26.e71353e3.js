(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{512:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Web 概述\nWeb（World Wide Web）即全球广域网，也称为万维网。我们常说的Web端就是网页端\nWeb标准")]),t._v(" "),a("ul",[a("li",[t._v("结构标准（HTML）：用于对网页元素进行整理和分类。")]),t._v(" "),a("li",[t._v("表现标准（CSS）：用于设置网页元素的版式、颜色、大小等外观样式。")]),t._v(" "),a("li",[t._v("行为标准（JS）：用于定义网页的交互和行为。\nW3C 万维网联盟组织，用来制定web标准的机构（组织）。\n为什么要遵循WEB标准呢？因为很多浏览器的浏览器内核不同，导致页面解析出来的效果可能会有差异，给开发者增加无谓的工作量。因此需要指定统一的标准。")])]),t._v(" "),a("p",[t._v("浏览器\n浏览器分成两部分：\n1、渲染引擎（即：浏览器内核）：\n用来解析 HTML与CSS。渲染引擎决定了浏览器如何显示网页的内容以及页面的格式信息。\n渲染引擎是浏览器兼容性问题出现的根本原因。\n2、JS 引擎\nGecko是Mozilla的浏览器引擎，在Firefox中使用，SpiderMonkey是Firefox的JavaScript引擎。")]),t._v(" "),a("p",[t._v("Apple为Safari浏览器创造了Webkit引擎，Webkit引擎内置了JavaScriptCore引擎。虽然Apple允许在IOS设备上可以使用其他的浏览器代替Safari，但所用通过App Store分发的浏览器必须使用Webkit引擎。例如，Opera Mini浏览器在IOS设备上使用Webkit引擎，而在其他设备上使用Blink引擎。")]),t._v(" "),a("p",[t._v("Google起初使用Webkit作为Chrome浏览器的引擎，后来以Webkit引擎为基础创造了Blink引擎，所有基于Chromium开源浏览器衍生的产品都使用blink引擎。而大名鼎鼎的V8引擎就是Chromium-based浏览器的JavaScript引擎。")]),t._v(" "),a("p",[t._v("Microsoft维护着自己的EdgeHTML引擎，作为老的Trident引擎的替代方案。新的Edge的浏览器已经开始使用Chromium的Blink引擎了，而EdgeHTML引擎只在window 10上的Universal Windows Platform中被使用。\n随着Edge也加入了Blink的阵营，基本上Webkit内核及Webkit内核的衍生Blink已经统治了浏览器市场。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("moz"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 火狐等使用Mozilla浏览器引擎的浏览器 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("webkit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Safari, 谷歌浏览器等使用Webkit引擎的浏览器 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Opera浏览器(早期) */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Internet Explorer (不一定) */")]),t._v(" \n")])])]),a("p",[t._v("(前端入门)[https://github.com/qianguyihao/Web/]")]),t._v(" "),a("h2",{attrs:{id:"遍历dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历dom"}},[t._v("#")]),t._v(" 遍历DOM")]),t._v(" "),a("ul",[a("li",[t._v("document对象 表示任何在浏览器中载入的网页，并作为网页内容的入口，也就是DOM 树")]),t._v(" "),a("li",[t._v("document.documentElement 是一个会返回文档对象（document）的根元素的只读属性（如HTML文档的 "),a("html",[t._v(" 元素）")])]),t._v(" "),a("li",[t._v("document.body 返回当前文档中的"),a("body",[t._v("元素或者"),a("frameset",[t._v("元素")])],1)]),t._v(" "),a("li",[t._v("document.head "),a("head",[t._v(" 标签\n"),a("strong",[t._v("在 DOM 的世界中，null 就意味着“不存在”")])])])]),t._v(" "),a("h3",{attrs:{id:"子节点-childnodes-firstchild-lastchild"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子节点-childnodes-firstchild-lastchild"}},[t._v("#")]),t._v(" 子节点：childNodes, firstChild, lastChild")]),t._v(" "),a("ul",[a("li",[t._v("childNodes: 集合（"),a("strong",[t._v("是一个类数组的可迭代对象")]),t._v("）列出了所有子节点("),a("strong",[t._v("直系的子元素")]),t._v(")，包括文本节点。"),a("code",[t._v("document.body.childNodes")])]),t._v(" "),a("li",[t._v("firstChild: 访问第一个子元素的快捷方式")]),t._v(" "),a("li",[t._v("lastChild: 访问最后一个子元素的快捷方式\n"),a("ol",[a("li",[t._v("集合")])]),t._v(" "),a("ul",[a("li",[t._v("可以用for...of迭代它（集合是可迭代的，提供了所需要的 Symbol.iterator 属性）。")]),t._v(" "),a("li",[t._v("无法使用数组的方法，因为它不是一个数组。")]),t._v(" "),a("li",[t._v("不要使用for...in, 因为会列举所有可枚举属性（注意这不是Set，Set的属性默认是不可枚举的）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0 1 2 entries keys values forEach length item")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("只读：不能通过类似 childNodes[i] = ... 的操作来替换一个子节点。")]),t._v(" "),a("li",[t._v("实时：如果保留一个对 elem.childNodes 的引用，然后向 DOM 中添加/移除节点，那么这些节点的更新会自动出现在集合中。")])])])]),t._v(" "),a("p",[t._v("(带你手写一个对象，深入理解可迭代对象是什么，与类数组有什么区别)[https://blog.csdn.net/LeviDing/article/details/109793189]")]),t._v(" "),a("h3",{attrs:{id:"兄弟节点sibling和父节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#兄弟节点sibling和父节点"}},[t._v("#")]),t._v(" 兄弟节点Sibling和父节点")]),t._v(" "),a("ul",[a("li",[t._v("下一个兄弟节点：nextSibling")]),t._v(" "),a("li",[t._v("上一个兄弟节点：prevSibling")]),t._v(" "),a("li",[t._v("父节点：parentNode")])]),t._v(" "),a("h3",{attrs:{id:"纯元素导航"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#纯元素导航"}},[t._v("#")]),t._v(" 纯元素导航")]),t._v(" "),a("p",[t._v("仅返回代表标签的和形成页面结构的元素节点。（如childNodes是包含所有节点的，如文本节点，元素节点，甚至如果注释节点存在的话，也能访问到。）")]),t._v(" "),a("ul",[a("li",[t._v("children — 仅那些作为元素节点的子代的节点。")]),t._v(" "),a("li",[t._v("firstElementChild，lastElementChild — 第一个和最后一个子元素。")]),t._v(" "),a("li",[t._v("previousElementSibling，nextElementSibling — 兄弟元素。")]),t._v(" "),a("li",[t._v("parentElement — 父元素。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//html元素的父节点是document，但document不是元素类型的节点")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// document")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentElement  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当我们想从任意节点 ele 到 <html> 而不是到 document 时，这个细节可能很有用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ele "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向上，直到html")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"搜索一个元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搜索一个元素"}},[t._v("#")]),t._v(" 搜索一个元素")]),t._v(" "),a("ul",[a("li",[t._v("document.getElementById(id)")]),t._v(" "),a("li",[a("strong",[t._v("document.querySelector(css)")]),t._v(" 相当于 document.querySelectorAll(css)[0]")]),t._v(" "),a("li",[a("strong",[t._v("document.querySelectorAll(css)")])]),t._v(" "),a("li",[t._v("elem.closest(css) 查找与 CSS 选择器匹配的最近的祖先, elem自己也会被搜索")]),t._v(" "),a("li",[t._v("更建议使用document.querySelector: 以下都是实时的\n"),a("ul",[a("li",[t._v("elem.getElementsByTagName(tag)")]),t._v(" "),a("li",[t._v("document.getElementsByName(name)")]),t._v(" "),a("li",[t._v("elem.getElementsByClassName(className)")])])])]),t._v(" "),a("p",[t._v("实时的（live）集合: 这样的集合始终反映的是文档的当前状态，并且在文档发生更改时会“自动更新”。\n在下面的例子中，有两个脚本。\n第一个创建了对 ")]),a("div",[t._v(" 的集合的引用。截至目前，它的长度是 1。\n第二个脚本在浏览器再遇到一个 "),a("div",[t._v(" 时运行，所以它的长度是 2。"),a("p"),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("First div"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非实时的")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" queryDivs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("divs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实时的")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" getDivs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("divs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Second div"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queryDivs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("getDivs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("p",[t._v("nodeName/tagName： 用于元素名，标签名（除了 XML 模式，都要大写）。对于非元素节点，nodeName 描述了它是什么。只读。")]),t._v(" "),a("p",[t._v("attribute 大小写不敏感")]),t._v(" "),a("ul",[a("li",[t._v("elem.hasAttribute(name) — 检查特性是否存在。")]),t._v(" "),a("li",[t._v("elem.getAttribute(name) — 获取这个特性值。")]),t._v(" "),a("li",[t._v("elem.setAttribute(name, value) — 设置这个特性值。")]),t._v(" "),a("li",[t._v("elem.removeAttribute(name) — 移除这个特性。")]),t._v(" "),a("li",[t._v("elem.attributes — 读取所有特性")])]),t._v(" "),a("p",[t._v("box-sizing")]),t._v(" "),a("ul",[a("li",[t._v("content-box (default) 所设置的 width 与 height 只会应用到这个元素的内容区")]),t._v(" "),a("li",[t._v("border-box 设置的边框和内边距的值是包含在width内的(不包含margin)")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);